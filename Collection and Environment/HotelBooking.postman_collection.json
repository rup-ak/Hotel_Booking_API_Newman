{
	"info": {
		"_postman_id": "5255959e-0468-4a1c-8f67-4848e3686871",
		"name": "HotelBooking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26927943"
	},
	"item": [
		{
			"name": "Create New",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")",
							"pm.environment.set(\"firstName\", firstName)",
							"",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")",
							"pm.environment.set(\"lastName\", lastName)",
							"",
							"console.log(firstName, lastName)",
							"",
							"var price = pm.variables.replaceIn(\"{{$randomInt}}\")",
							"pm.environment.set(\"price\", parseInt(price))",
							"",
							"// var ispaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")",
							"// pm.environment.set(\"ispaid\",ispaid)",
							"",
							"// console.log(price, ispaid)",
							"",
							"const moment = require('moment')",
							"const today = moment()",
							"",
							"pm.environment.set(\"checkin\", today.format(\"YYYY-MM-DD\"))",
							"pm.environment.set(\"checkout\", today.add(5, 'day').format(\"YYYY-MM-DD\"))",
							"",
							"var additionalneeds=pm.variables.replaceIn(\"Breakfast\")",
							"pm.environment.set(\"additionalneeds\",additionalneeds);",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()",
							"",
							"pm.environment.set(\"id\", jsonData.bookingid)",
							"",
							"pm.test (\"Status Code is 200\", function(){",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"firstname\" : \"{{firstName}}\",\n\t\"lastname\" : \"{{lastName}}\",\n\t\"totalprice\" : {{price}},\n\t\"depositpaid\" : true,\n\t\"bookingdates\" : {\n    \t\"checkin\" : \"{{checkin}}\",\n    \t\"checkout\" : \"{{checkout}}\"\n\t},\n\t\"additionalneeds\" : \"Breakfast\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"var jsonData = pm.response.json()",
							"",
							"pm.test(\"First Name Validation \", function(){",
							"    pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))",
							"})",
							"",
							"pm.test(\"Last Name Validation \", function(){",
							"    pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))",
							"})",
							"",
							"pm.test(\"Price Validation\", function(){",
							"    pm.expect(jsonData.totalprice).to.eql(pm.environment.get(\"price\"))",
							"})",
							" ",
							"pm.test(\"Depositpaid \", function(){",
							"    pm.expect(jsonData.depositpaid).to.eql(true)",
							"})",
							"",
							"pm.test(\"CheckIn \", function(){",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))",
							"})",
							"",
							"pm.test(\"CheckOut \", function(){",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))",
							"})",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/booking/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var tokenData = pm.response.json()",
							"",
							"pm.environment.set(\"token\",tokenData.token)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"admin\",\n\t\"password\": \"password123\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseBody = pm.response.json()\r",
							"\r",
							"pm.test(\"First name Validation\", function () {\r",
							"     pm.expect(responseBody).to.be.an('object');\r",
							"     pm.expect(responseBody.firstname).to.be.a('string');\r",
							"     pm.expect(responseBody.firstname).to.not.be.empty;\r",
							"     pm.expect(responseBody.firstname).to.equal(\"David\");\r",
							"});\r",
							"\r",
							"pm.test(\"Last name Validation\", function () {\r",
							"    pm.expect(responseBody).to.be.an('object');\r",
							"    pm.expect(responseBody.lastname).to.exist.and.to.be.a('string');\r",
							"    pm.expect(responseBody.lastname).to.equal(\"Warner\");\r",
							"});\r",
							"\r",
							"pm.test(\"Price Validation\", function () {\r",
							"     pm.expect(responseBody).to.be.an('object');\r",
							"     pm.expect(responseBody.totalprice).to.be.a('number');\r",
							"     pm.expect(responseBody.totalprice).to.equal(pm.environment.get(\"price\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Depositpaid\", function () {\r",
							"     pm.expect(responseBody.depositpaid).to.be.a('boolean');\r",
							"     pm.expect(responseBody).to.have.property('depositpaid');\r",
							"     pm.expect(responseBody.depositpaid).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"CheckIn\", function () {\r",
							"    pm.expect(responseBody).to.be.an('object');\r",
							"    pm.expect(responseBody.bookingdates).to.have.property('checkin').that.is.a('string');\r",
							"    pm.expect(responseBody.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"));\r",
							"});\r",
							"\r",
							"pm.test(\"CheckOut\", function () {\r",
							"    pm.expect(responseBody).to.be.an('object');\r",
							"    pm.expect(responseBody.bookingdates).to.have.property('checkout').that.is.a('string');\r",
							"    pm.expect(responseBody.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"));\r",
							"});\r",
							"\r",
							"pm.test(\"AdditionalNeeds\", function () {\r",
							"     pm.expect(pm.response.json()).to.be.an('object');\r",
							"     pm.expect(pm.response.json().additionalneeds).to.exist;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token = {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"firstname\" : \"David\",\n\t\"lastname\" : \"Warner\",\n\t\"totalprice\" : {{price}},\n\t\"depositpaid\" : true,\n\t\"bookingdates\" : {\n    \t\"checkin\" : \"{{checkin}}\",\n    \t\"checkout\" : \"{{checkout}}\"\n\t},\n\t\"additionalneeds\" : \"Breakfast\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}